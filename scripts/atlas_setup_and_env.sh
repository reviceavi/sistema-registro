#!/usr/bin/env bash
set -euo pipefail

# Automatiza (localmente) la creaci칩n de un DB user en Atlas y genera un archivo .env
# Requisitos: curl, jq
# Uso:
# ATLAS_PUBLIC_KEY=xtmgptos ATLAS_PRIVATE_KEY=91181f6f-7e16-42c0-8410-eeb11fb8cc8d \
#   DB_USER=reviceavi_user DB_PASS='TuPassS3guro!' ./scripts/atlas_setup_and_env.sh
# Opcionales:
# PROJECT_ID=<project id>   # si no se proporciona, buscar치 un project llamado 'Project 0' o tomar치 el primero
# DB_NAME=reviceavi         # nombre de la base dentro del cluster (por defecto reviceavi)
# COLLECTION=base_upc       # colecci칩n por defecto

ATLAS_PUBLIC_KEY=${ATLAS_PUBLIC_KEY:-}
ATLAS_PRIVATE_KEY=${ATLAS_PRIVATE_KEY:-}
DB_USER=${DB_USER:-}
DB_PASS=${DB_PASS:-}
PROJECT_ID=${PROJECT_ID:-}
DB_NAME=${DB_NAME:-reviceavi}
COLLECTION=${COLLECTION:-base_upc}

if [ -z "$ATLAS_PUBLIC_KEY" ] || [ -z "$ATLAS_PRIVATE_KEY" ] || [ -z "$DB_USER" ] || [ -z "$DB_PASS" ]; then
  cat <<EOF
Usage: ATLAS_PUBLIC_KEY=... ATLAS_PRIVATE_KEY=... DB_USER=... DB_PASS=... [PROJECT_ID=...] ./scripts/atlas_setup_and_env.sh

This script will:
  - find the project (Project 0 by name if not provided)
  - find the first cluster SRV address in the project
  - create a DB user with readWrite on database "$DB_NAME"
  - write a .env file with MONGODB_URI, MONGODB_DB and MONGODB_COLLECTION

Dependencies: curl, jq
EOF
  exit 1
fi

AUTH="${ATLAS_PUBLIC_KEY}:${ATLAS_PRIVATE_KEY}"

echo "=> Finding project id..."
if [ -z "$PROJECT_ID" ]; then
  resp=$(curl -s -u "$AUTH" 'https://cloud.mongodb.com/api/atlas/v1.0/groups')
  # try to find Project 0
  PROJECT_ID=$(echo "$resp" | jq -r '.results[] | select(.name=="Project 0") | .id' | head -n1)
  if [ -z "$PROJECT_ID" ] || [ "$PROJECT_ID" = "null" ]; then
    PROJECT_ID=$(echo "$resp" | jq -r '.results[0].id')
  fi
fi

if [ -z "$PROJECT_ID" ] || [ "$PROJECT_ID" = "null" ]; then
  echo "Could not determine PROJECT_ID. Please provide PROJECT_ID env var." >&2
  exit 2
fi
echo "=> Using PROJECT_ID=$PROJECT_ID"

echo "=> Getting clusters for project..."
clusters=$(curl -s -u "$AUTH" "https://cloud.mongodb.com/api/atlas/v1.0/groups/${PROJECT_ID}/clusters")
SRV=$(echo "$clusters" | jq -r '.results[0].srvAddress // .results[0].mongoURI || .results[0].host' )
if [ -z "$SRV" ] || [ "$SRV" = "null" ]; then
  # fallback: try name
  SRV=$(echo "$clusters" | jq -r '.results[0].name')
fi

if [ -z "$SRV" ] || [ "$SRV" = "null" ]; then
  echo "Could not determine cluster SRV address. Check project clusters in Atlas." >&2
  exit 3
fi

echo "=> Cluster SRV: $SRV"

echo "=> Creating DB user '$DB_USER' with readWrite on $DB_NAME (if it already exists, Atlas will return an error)."
create_resp=$(curl -s -u "$AUTH" -H "Content-Type: application/json" -X POST "https://cloud.mongodb.com/api/atlas/v1.0/groups/${PROJECT_ID}/databaseUsers" -d @- <<JSON
{
  "databaseName": "admin",
  "username": "${DB_USER}",
  "password": "${DB_PASS}",
  "roles": [ { "roleName": "readWrite", "databaseName": "${DB_NAME}" } ]
}
JSON
)

echo "$create_resp" | jq -C .

echo "=> Writing .env file"
cat > .env <<ENV
# Auto-generated by scripts/atlas_setup_and_env.sh
MONGODB_URI=mongodb+srv://${DB_USER}:${DB_PASS}@${SRV}/${DB_NAME}?retryWrites=true&w=majority
MONGODB_DB=${DB_NAME}
MONGODB_COLLECTION=${COLLECTION}
MONGO_ADMIN_KEY=
PORT=3000
ENV

echo "Done. .env written. Start the local server with: node server.js"
echo "Then test schema: curl -s 'http://localhost:3000/api/mongo-admin?action=schema&size=200' | jq ."
